/*
等于1的情形好判断，无限循环没有好的处理方法。
由于每次通过运算生成下一个数，可以将其看作隐式链表。
在链表中找循环和分叉都可以用双指针的方法。
当快指针追上满指针时，说明存在一个环。这个思路新颖。
*/

class Solution {
public:
    int func(int n){
        long sum=0;
        while(n){
            int t = n%10;
            n/=10;
            sum+=t*t;
        }
        return sum;
    }
    bool isHappy(int n) {
        int slow=n,fast = func(n);
        while(fast!=1 && slow!=fast){
            slow = func(slow);
            fast = func(func(fast));
        }
        return fast==1;
    }
};
